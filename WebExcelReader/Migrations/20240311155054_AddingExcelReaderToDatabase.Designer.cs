// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebExcelReader.Data;

#nullable disable

namespace WebExcelReader.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240311155054_AddingExcelReaderToDatabase")]
    partial class AddingExcelReaderToDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebExcelReader.Models.ExcelDb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("first_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("highest_probability_country_code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("highest_probability_value")
                        .HasColumnType("float");

                    b.Property<string>("last_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lowest_probability_country_code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("lowest_probability_value")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("ExcelReaderTable");
                });
#pragma warning restore 612, 618
        }
    }
}
